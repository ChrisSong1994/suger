!function(e){var t={};function r(n){if(t[n])return t[n].exports;var u=t[n]={i:n,l:!1,exports:{}};return e[n].call(u.exports,u,u.exports,r),u.l=!0,u.exports;}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n});},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0});},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var u in e)r.d(n,u,function(t){return e[t];}.bind(null,u));return n;},r.n=function(e){var t=e&&e.__esModule?function(){return e.default;}:function(){return e;};return r.d(t,"a",t),t;},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t);},r.p="",r(r.s=5);}([function(e,t,r){"use strict";r.d(t,"a",(function(){return n;})),r.d(t,"b",(function(){return u;}));const n=e=>Object.prototype.toString.call(e).slice(8,-1),u=(s="length",function(e){return null==e?void 0:e[s];});var s;},function(e,t,r){"use strict";r.r(t);var n=r(2),u=r(3);t.default=e=>{if(!Object(n.default)(e))return[];if(Object.keys)return Object.keys(e);let t=[];for(let r in e)Object(u.default)(e,r)&&t.push(r);return t;};},function(e,t,r){"use strict";r.r(t);var n=r(0);t.default=e=>"Object"===Object(n.a)(e);},function(e,t,r){"use strict";r.r(t);t.default=(e,t)=>null!==e&&Object.prototype.hasOwnProperty.call(e,t);},function(e,t,r){"use strict";r.r(t);var n=r(0);t.default=e=>"Function"===Object(n.a)(e);},function(e,t,r){"use strict";r.r(t);const n={},u=r(6);n.version=u.version,n.description=u.description;const s=r(7);var i;(i=s,i.keys().map(i)).forEach(e=>{n[e.default.name]=e.default;}),t.default=n;},function(e){e.exports=JSON.parse("{\"name\":\"suger\",\"version\":\"1.0.5\",\"description\":\"suger - private js util library\",\"main\":\"./dist/suger.js\",\"scripts\":{\"dev\":\"cross-env NODE_ENV=dev webpack-dev-server --config ./scripts/webpack.dev.config.js --color\",\"build\":\"cross-env NODE_ENV=prod webpack --config ./scripts/webpack.build.config.js --color\",\"eslint\":\"eslint -c .eslintrc.js lib/** --fix\",\"publish-npm\":\"npm run push-master && sh publish.sh\",\"push-master\":\"sh push-master.sh\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/song111/suger.git\"},\"keywords\":[\"util\"],\"author\":\"chrissong\",\"license\":\"ISC\",\"bugs\":{\"url\":\"https://github.com/song111/suger/issues\"},\"homepage\":\"https://github.com/song111/suger#readme\",\"devDependencies\":{\"@babel/core\":\"^7.8.4\",\"@babel/plugin-proposal-export-default-from\":\"^7.8.3\",\"@babel/plugin-proposal-export-namespace-from\":\"^7.8.3\",\"@babel/plugin-transform-runtime\":\"^7.8.3\",\"@babel/preset-env\":\"^7.8.4\",\"babel-eslint\":\"^10.0.3\",\"babel-loader\":\"^8.0.6\",\"clean-webpack-plugin\":\"^3.0.0\",\"cross-env\":\"^7.0.0\",\"eslint\":\"^6.8.0\",\"html-webpack-plugin\":\"^3.2.0\",\"mini-css-extract-plugin\":\"^0.9.0\",\"uglifyjs-webpack-plugin\":\"^2.2.0\",\"webpack\":\"^4.41.6\",\"webpack-bundle-analyzer\":\"^3.6.0\",\"webpack-cli\":\"^3.3.11\",\"webpack-dev-server\":\"^3.10.3\",\"webpack-merge\":\"^4.2.2\"},\"files\":[\"dist\"]}");},function(e,t,r){var n={"./Collection/each.js":18,"./Function/debounce.js":8,"./Function/throttle.js":9,"./Object/allKeys.js":10,"./Object/entries.js":11,"./Object/functions.js":12,"./Object/has.js":3,"./Object/isArray.js":13,"./Object/isBoolean.js":14,"./Object/isFunction.js":4,"./Object/isNull.js":15,"./Object/isObject.js":2,"./Object/isUndefined.js":16,"./Object/keys.js":1,"./Object/values.js":17};function u(e){var t=s(e);return r(t);}function s(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t;}return n[e];}u.keys=function(){return Object.keys(n);},u.resolve=s,e.exports=u,u.id=7;},function(e,t,r){"use strict";r.r(t);t.default=(e,t,r)=>{let n=null;return(...u)=>{n&&clearTimeout(n),r&&!n&&e.apply(void 0,u),n=setTimeout(()=>{e.apply(void 0,u);},t);};};},function(e,t,r){"use strict";r.r(t);t.default=(e,t)=>{let r=0,n=null;return(...u)=>{let s=+new Date;s-r<t?(n&&clearTimeout(n),n=setTimeout(()=>{r=s,e.apply(void 0,u);},t)):(r=s,e.apply(void 0,u));};};},function(e,t,r){"use strict";r.r(t);var n=r(2);t.default=e=>{if(!Object(n.default)(e))return[];let t=[];for(let r in e)t.push(r);return t;};},function(e,t,r){"use strict";r.r(t);var n=r(1);t.default=(e={})=>{if(Object.entries)return Object.entries(e);let t=Object(n.default)(e),r=t.length,u=Array[r];for(let n=0;n<r;n++)u[n]=[t[n],e[t[n]]];return u;};},function(e,t,r){"use strict";r.r(t);var n=r(4);t.default=e=>{let t=[];for(let r in e)Object(n.default)(e[r])&&t.push(r);return t.sort();};},function(e,t,r){"use strict";r.r(t);var n=r(0);t.default=e=>Array.isArray?Array.isArray(e):"Array"===Object(n.a)(e);},function(e,t,r){"use strict";r.r(t);var n=r(0);t.default=e=>"Boolean"===Object(n.a)(e);},function(e,t,r){"use strict";r.r(t);t.default=e=>null===e;},function(e,t,r){"use strict";r.r(t);t.default=e=>void 0===e;},function(e,t,r){"use strict";r.r(t);var n=r(1);const u=e=>{const t=Object(n.default)(e).length,r=Array(t);for(let u=0;u<t;u++)r[u]=e[n.default[u]];return u;};t.default=u;},function(e,t,r){"use strict";r.r(t);const n=Math.pow(2,53)-1;var u=r(0);var s=e=>{let t=Object(u.b)(e);return"number"==typeof t&&t>=0&&t<=n;};t.default=(e,t)=>{let r,n=0;if(s(e))for(r=e.length;n<r&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e;};}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,